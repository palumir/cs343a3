TODO:
1. Segmentation fault at server after successfully receiving function information from 
   client at rpc.cc:211 (1 server, 1 client and server, client and binder are running on 3  
   different machines)
   
Andrew: Segmentation fault fixed. Gets hung up on f3. f2 and f1 return incorrect.

2. termination stage

3. 1 server, 1 client 

4. 1 server, multiple clients

5. multiple servers, 1 client

6. multiple servers, multiple clients

7. round robin

8. function overloading

9. server/client failure

 
Done:
1. makefile
2. server can successfully register its functions into binder's database
3. binder's database is able to handle duplicate register and function overloading(I
   think)
4. binder can accept the loc_request from client and be able to send server's location 
   back to client
5. In rpc.cc:
   skeleton registeredFunctions[256];
   string functionNames[256];
   int* argTypesList[256];
   These 3 data structures should be vector/map or other data structures instead  
   of hardcoded length array


Function being tested:
1. rpcInit:     yes 
2. rpcCall:     yes, not fully test due to seg fault
3. rpcRegister: yes, cannot find any bugs so far
4. rpcExecute:  yes, not fully test due to seg fault
5. rpcTerminate: no